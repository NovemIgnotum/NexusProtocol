name: Python CI Safety Net

on:
  push:
    branches: [dev]

jobs:
  test:
    runs-on: ubuntu-22.04 # Version explicite pour éviter les problèmes de runner
    timeout-minutes: 15 # Évite les blocages infinis
    outputs:
      test_status: ${{ steps.run_tests.outputs.result }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Nécessaire pour les opérations git

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt pytest

      - name: Run tests
        id: run_tests
        run: |
          if pytest; then
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "result=failure" >> $GITHUB_OUTPUT
          fi

  handle_failure:
    needs: test
    if: needs.test.outputs.test_status == 'failure'
    runs-on: ubuntu-22.04
    permissions:
      contents: write # Permission explicite pour pousser des branches

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Create failure branch
        run: |
          FAILURE_BRANCH="failure-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $FAILURE_BRANCH
          git push origin $FAILURE_BRANCH
          echo "Created failure branch: $FAILURE_BRANCH"

      - name: Revert dev branch
        run: |
          git checkout dev
          git reset --hard HEAD~1
          git push origin dev --force
          echo "Dev branch reverted to previous commit"
